name: dev
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: ["18.x"]
    steps:
      - name: Setup
        uses: actions/setup-node@v3.5.1
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: ${{ matrix.node }}
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore Yarn Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: Test
        run: |
          yarn run test
          sed -i -e "s|$PWD|$SONAR_ROOT|g" coverage/lcov.info
        env:
          SONAR_ROOT: /github/workspace
      - name: Build
        run: yarn build
      - name: Sonar
        if: matrix.os == 'ubuntu-latest' && github.actor != 'dependabot[bot]'
        uses: sonarsource/sonarcloud-github-action@v1.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        run: yarn release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
